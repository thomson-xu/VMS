<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <context:component-scan base-package="com.tms"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:annotation-config />
    <context:component-scan base-package="com.tms.author">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

     <!--整合mysqljpa-->
    <bean id="EntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="mySqldataSource"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
        <!--property name="persistenceUnitManager" ref="defaultPersistenceUnitManager"/-->
        <property name="persistenceUnitName" value="DBPersistenceUnit"/>
        <property name="packagesToScan">
            <array>
                <value>com.tms</value>
            </array>
        </property>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
    </bean>

    <jpa:repositories base-package="com.tms" repository-impl-postfix="Impl"
                      entity-manager-factory-ref="EntityManagerFactory"
                      transaction-manager-ref="transactionManager"/>
    <bean id="propertyConfigurer"
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="/WEB-INF/jdbc.properties"/>
    </bean>
<!--<bean id="mySqldataSource"
          class="org.apache.commons.dbcp.BasicDataSource">-->
    <bean id="mySqldataSource"
          class="com.tms.base.dao.util.FixedBasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="EntityManagerFactory"/>
        <!--property name="dataSource" ref="dataSource"/-->
    </bean>
    <!-- 开启注解事务 只对当前配置文件有效 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
   <!-- 自动装配注解Bean后置处理器 -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <!-- JPA注解Bean后置处理器 -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!--bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="getAll*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <aop:config proxy-target-class="true">
        <aop:pointcut expression="execution(* com.tms.*(..))" id="daopoint"/>
        <aop:advisor pointcut-ref="daopoint" advice-ref="txAdvice"/>
    </aop:config>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
      <!--  <property name="generateDdl" value="false"/>
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
        <property name="showSql" value="true"/>
        <property name="database" value="MYSQL"/>-->
    </bean>

    <aop:config>
        <aop:pointcut expression="execution(* com.tms.*.service.*.*(..))" id="txPointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:aspectj-autoproxy />

    <bean id="userSessionContext" class="com.tms.base.session.SecurityUserSessionContext" />
</beans>