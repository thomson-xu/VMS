<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 配置不过滤的资源（静态资源及登录相关） -->
	<sec:http pattern="/resources/css/dashboard.css" security="none"></sec:http>
	<sec:http pattern="/**/*.jpg" security="none"></sec:http>
	<sec:http pattern="/**/*.jpeg" security="none"></sec:http>
	<sec:http pattern="/**/*.gif" security="none"></sec:http>
	<sec:http pattern="/resources/images/logo-meritoo.png" security="none"></sec:http>
	<sec:http pattern="/resources/js/bootstrap-admin-theme-change-size.js" security="none"></sec:http>
	
	<sec:http pattern="/login.jsp" security="none"></sec:http>
	<sec:http pattern="/getCode" security="none" /><!-- 不过滤验证码 -->
	<sec:http pattern="/test/**" security="none"></sec:http><!-- 不过滤测试内容 -->
	
	<!-- authenticationEntryPoint -->
	<sec:http access-decision-manager-ref="accessDecisionManager"
		entry-point-ref="loginAuthenticationEntryPoint" >
		
		<sec:access-denied-handler ref="accessDeniedHandler"/>
		
		<sec:logout invalidate-session="true" logout-url="/logout"
			logout-success-url="/pages/logout.jsp" />
		
		<!-- <sec:session-management invalid-session-url="/login.jsp" /> -->
		
		<!-- <sec:session-management invalid-session-url="/login.jsp" session-authentication-strategy-ref="">
			<sec:concurrency-control error-if-maximum-exceeded="true"
				max-sessions="1" expired-url="/login.jsp"/>
		</sec:session-management> -->
		<sec:session-management session-authentication-strategy-ref="concurrentSessionControlStrategy" />
		
		<sec:remember-me 
			authentication-success-handler-ref="authenticationSuccessHandler"
			data-source-ref="mySqldataSource"
			user-service-ref="userDetailService"
		/>
			
		
		<sec:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
		<sec:custom-filter ref="captchaAuthenticaionFilter" position="FORM_LOGIN_FILTER"/>
		<sec:custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER"/>
	</sec:http>
	
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="authenticationProvider" />
	</sec:authentication-manager>
	
	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="hideUserNotFoundExceptions" value="false" />
		<property name="userDetailsService" ref="userDetailService" />
		<property name="userCache" ref="userCache" />
		<property name="passwordEncoder" ref="passwordEncode" />
		<property name="saltSource" ref="saltSource" />
	</bean>

	<!--<http auto-config="true" >
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/admin**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/dba**" access="hasRole('ADMIN') and hasRole('DBA')" />
		<form-login  login-page="/login"
					 username-parameter="ssoId"
					 password-parameter="password"
					 authentication-failure-url="/Access_Denied" />
		<csrf/>
	</http>

	<authentication-manager >
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="bcryptEncoder"/>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<beans:bean id="customUserDetailsService" class="com.websystique.springsecurity.service.CustomUserDetailsService" />-->

	<!-- 配置密码加密类 -->
	<bean id="passwordEncode" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="username"/>
	</bean>
	
	<bean id="userDetailService" class="com.tms.author.security.DefaultUserDetailsService" />
	
	<!-- 启用用户的缓存功能 -->
	<bean id="userCache"
		class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<property name="cache" ref="userEhCache" />
	</bean>
	
	<bean id="userEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheName" value="userCache" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />

	<!-- spring自带的与权限有关的数据读写Jdbc模板 -->

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg name="decisionVoters">
			<list>
				<ref bean="roleVoter"/>
				<ref bean="authenticatedVoter"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<property name="rolePrefix" value=""></property>
	</bean>
	
	<bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />
	
	<!-- 自定义权限不足处理程序 -->
	<bean id="accessDeniedHandler" class="com.tms.author.security.RequestAccessDeniedHandler">
		<property name="errorPage" value="/WEB-INF/error/403.jsp"></property>
	</bean>
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>
	
	<bean id="securityMetadataSource"
		class="com.tms.author.security.URLSecurityMetadataSource"/>
	
	<bean id="methodSecurityInterceptor" 
		class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="securityMetadataSource" ref="methodSecurityMetadataSource" />
	</bean>
	
	<bean id="methodSecurityMetadataSource"
		class="com.tms.author.security.MethodSecurityMetadataSource" />
	
	<aop:config>
		<aop:pointcut id="sevicePointcut"
			expression="execution(* com.*.*.service.*.*(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" pointcut-ref="sevicePointcut" order="1"/>
	</aop:config>
	
	<bean id="captchaAuthenticaionFilter" class="com.tms.author.security.CaptchaAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<property name="filterProcessesUrl" value="/login.do" />
		<property name="sessionAuthenticationStrategy" ref="concurrentSessionControlStrategy" />
	</bean>
	
	<bean id="authenticationSuccessHandler" class="com.tms.author.security.SavedRequestLoginSuccessHandler">
		<property name="defaultTargetUrl" value="/index.jsp" />
		<property name="forwardToDestination" value="true" />
		<property name="alwaysUseDefaultTargetUrl" value="true" />
	</bean>
	<bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/pages/authenticationFailure.jsp" />
	</bean>
	<!-- @unused -->
	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp" />
	</bean>
	
	<bean id="loginAuthenticationEntryPoint" class="com.tms.author.security.LoginAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp"></property>
	</bean>
	
	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<constructor-arg name="expiredUrl" value="/sessionOut.jsp" />
	</bean>
	
	<bean id="concurrentSessionControlStrategy"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<property name="maximumSessions" value="1"></property>
		<property name="exceptionIfMaximumExceeded" value="true"></property>
	</bean>
	
	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

</beans>